# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MACS3 application (non x64, python 3.7)

on:
  push:
    branches:  [ feat-macs3* ]
  pull_request:
    branches:  [ feat-macs3* ]

jobs:
  build_job:
    runs-on: ubuntu-20.04
    name: MACS3 Build on ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: armv7
            distro: buster
          #- arch: ppc64le
          #  distro: buster
          #- arch: s390x
          #  distro: buster
    steps:
      - name: Checkout MACS
        uses: actions/checkout@v2.1.0
      - name: Set up arch and run
        uses: uraimo/run-on-arch-action@v2.0.5
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          githubToken: ${{ github.token }}

          # The shell to run commands with in the container
          shell: /bin/bash

          # Mount the artifacts directory as /artifacts in the container 
          dockerRunArgs: |
            -v "${PWD}/build:/build" 

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/build/"
            echo `ls -l .`
            cp -r "./*" "${PWD}/build/"

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            useradd -m macs3
            mkdir -p /build/
            chown -R macs3:macs3 /build
            apt-get update -qq -y
            apt-get install -yq python3 python3-pip python3-setuptools python3-wheel
          run: |
            pwd
            ls -l
            su - macs3
            export PATH="/home/macs3/.local/bin:${PATH}"
            pwd
            ls -l
            cd /build
            ls -l
            # install
            python3 --version 
            su - macs3 
            export PATH="/home/macs3/.local/bin:${PATH}" 
            pip3 --version 
            pip3 install --user cython>=0.29 
            pip3 install --user --upgrade -r requirements.txt
            pytest --version 
            python setup.py install --user
            # display python version
            python --version
            # run test
            pytest --runxfail && cd test && ./cmdlinetest macs3
