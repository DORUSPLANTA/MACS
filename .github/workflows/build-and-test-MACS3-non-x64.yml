# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MACS3 application (non x64)

on:
  push:
    branches:  [ feat-macs3* ]
  pull_request:
    branches:  [ feat-macs3* ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: armv7
            distro: stretch
          - arch: ppc64le
            distro: stretch
          - arch: s390x
            distro: stretch
    runs-on: stretch
    name: MACS3 Build on ${{ matrix.arch }} ${{ matrix.python-version }} ${{ matrix.arch }} 

    steps:
      - name: Checkout MACS
        uses: actions/checkout@v2.1.0
      - name: Set up arch and run
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          githubToken: ${{ github.token }}

          # The shell to run commands with in the container
          shell: /bin/bash

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/build/"
            ls
            pwd
            ls ${GITHUB_WORKSPACE}
            cp -r "${GITHUB_WORKSPACE}/*" "${PWD}/build/"
            ls ${PWD}/build/
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/build:/build"
            
          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -qq -y
            apt-get install -yq python3 python3-pip python3-setuptools python3-wheel
            python3 --version
            pip3 --version
            pip install --user cython
            pip install --user --upgrade -r requirements.txt
            pytest --version
          run: |
            # install macs3
            cd /build
            python setup.py install --user
            # display python version
            python --version
            # run test
            pytest --runxfail && cd test && ./cmdlinetest macs3
